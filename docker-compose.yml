version: '3.5'
services:
  qanary-pipeline:
    image: qanary/qanary-pipeline:latest
    #network_mode: host
    ports:
      - "8080:8080"
    environment:
      - HOST_IP=$HOST_IP
      - VIRTUOSO_URL=jdbc:virtuoso://${HOST_IP}:$VIRTUOSO_JDBC_PORT
      - VIRTUOSO_USERNAME=dba
      - VIRTUOSO_PASSWORD=$DBA_PASSWORD
      - SERVER_HOST=http://$HOST_IP
      - SERVER_PORT=8080
      - QANARY_PROCESS_ALLOW-ADDITIONAL-TRIPLES=false

  virtuoso_triplestore:
    image: wseresearch/virtuoso-instance:latest
    ports:
      - "$VIRTUOSO_WEB_PORT:8890"
      - "$VIRTUOSO_JDBC_PORT:1111"
    environment:
      - DBA_PASSWORD=$DBA_PASSWORD

  ned-component:
    image: qanary/qanary-component-ned-dbpediaspotlight
    ports:
      - "$NED_DBPEDIA_SPOTLIGHT_PORT:10008"
    #network_mode: host
    restart: unless-stopped
    environment:
      - SERVER_HOST=$QANARY_COMPONENT_SERVER_HOST
      - SERVER_PORT=$NED_DBPEDIA_SPOTLIGHT_PORT
      - SPRING_BOOT_ADMIN_URL=$QANARY_COMPONENT_SPRING_BOOT_ADMIN_URL
      - SPRING_BOOT_ADMIN_CLIENT_INSTANCE_SERVICE_BASE_URL=$QANARY_COMPONENT_SERVER_HOST:$NED_DBPEDIA_SPOTLIGHT_PORT

  kg2kg-component:
    image: qanary/qanary-component-kg2kg-translateannotationsofinstance
    ports:
      - "$KG2KG_COMPONENT_PORT:40444"
    environment:
      - SERVER_HOST=http://${HOST_IP}
      - SPRING_BOOT_ADMIN_URL=http://${HOST_IP}:8080
      - SERVER_PORT=$KG2KG_COMPONENT_PORT
      - SPRING_BOOT_ADMIN_CLIENT_INSTANCE_SERVICE_BASE_URL=$QANARY_COMPONENT_SERVER_HOST:$KG2KG_COMPONENT_PORT

  mlflow:
    image: qanary/qanary-component-logging-mlflow:latest
#    #network_mode: host
    environment:
      - HOST_IP=$HOST_IP
      - MLFLOW_HOST=$MLFLOW_HOST
      - MLFLOW_PORT=$MLFLOW_PORT
      - MLFLOW_PORT_ARTIFACT=$MLFLOW_PORT_ARTIFACT
      - MLFLOW_USERNAME=$MLFLOW_USERNAME
      - MLFLOW_PASSWORD=$MLFLOW_PASSWORD
    ports:
      - "$MLFLOW_PORT:5000"
      - "$MLFLOW_PORT_ARTIFACT:$MLFLOW_PORT_ARTIFACT"
    volumes:
      - artifacts:/home/mlflow

  automation_component:
    container_name: AutomationServiceComponent
    restart: unless-stopped
    image: qanary/qanary-component-ner-automl-pretrained-name:0.1.0
    #network_mode: host
    ports:
      - 8081:8081
    environment:
      - HOST_IP=$HOST_IP
      - SPRING_BOOT_ADMIN_URL=http://${HOST_IP}:8080
      - SPRING_BOOT_ADMIN_USERNAME=admin
      - SPRING_BOOT_ADMIN_PASSWORD=admin
      - SERVICE_HOST=http://${HOST_IP}:8081
      - SERVICE_PORT=8081
      - SERVICE_NAME_COMPONENT=AutomationServiceComponent
      - SERVICE_DESCRIPTION_COMPONENT="A component interacting with an NER model"
      - PRODUCTION=True
    command: uvicorn qanarycomponent:app --host 0.0.0.0 --port=8081

  birth-data:
    image: qanary/qanary-component-qb-birthdata-wikidata:latest
    ports:
      - $BIRTH_DATA_WIKIDATA_PORT:$BIRTH_DATA_WIKIDATA_PORT
    #network_mode: host
    restart: unless-stopped
    environment:
      - HOST_IP=$HOST_IP
      - SERVER_HOST=$QANARY_COMPONENT_SERVER_HOST
      - SERVER_PORT=$BIRTH_DATA_WIKIDATA_PORT
      - SPRING_APPLICATION_NAME=$BIRTH_DATA_WIKIDATA_COMPONENT_NAME
      - SPRING_APPLICATION_DESCRIPTION=$BIRTH_DATA_WIKIDATA_COMPONENT_DESCRIPTION
      - SPRING_BOOT_ADMIN_URL=$QANARY_COMPONENT_SPRING_BOOT_ADMIN_URL
      - SPRING_BOOT_ADMIN_CLIENT_INSTANCE_SERVICE-BASE-URL=$QANARY_COMPONENT_SERVER_HOST:$BIRTH_DATA_WIKIDATA_PORT

  sparql-executer:
    image: qanary/qanary-component-qe-sparqlexecuter:latest
    container_name: $SPARQL_EXECUTER_COMPONENT_NAME
    #network_mode: host
    ports:
      - $SPARQL_EXECUTER_PORT:$SPARQL_EXECUTER_PORT
    restart: unless-stopped
    environment:
      - HOST_IP=$HOST_IP
      - SERVER_HOST=$QANARY_COMPONENT_SERVER_HOST
      - SERVER_PORT=$SPARQL_EXECUTER_PORT
      - SPRING_APPLICATION_NAME=$SPARQL_EXECUTER_COMPONENT_NAME
      - SPRING_APPLICATION_DESCRIPTION=$SPARQL_EXECUTER_COMPONENT_DESCRIPTION
      - SPRING_BOOT_ADMIN_URL=$QANARY_COMPONENT_SPRING_BOOT_ADMIN_URL
      - SPRING_BOOT_ADMIN_CLIENT_INSTANCE_SERVICE-BASE-URL=$QANARY_COMPONENT_SERVER_HOST:$SPARQL_EXECUTER_PORT
      
  chatbot-ui:
    image: qanary/qanary-ui:latest
    container_name: chatbot-ui
    restart: unless-stopped
    ports:
      - "$CHATBOT_UI_PORT:80"
    environment:
      - HOST_IP=$HOST_IP
      - DEFAULT_LANGUAGE="$CHATBOT_UI_DEFAULT_LANGUAGE"
      - CHATBOT_FRONTEND_URL="$CHATBOT_UI_FRONTEND_URL"
      - DEFAULT_CHATBOT_BACKEND_URL="$CHATBOT_UI_DEFAULT_BACKEND_URL"
      - DEFAULT_CHATBOT_COMPONENTS=$CHATBOT_UI_DEFAULT_COMPONENTS
      - INITIAL_QUESTION_PARAMETER_NAME="$CHATBOT_UI_INITIAL_QUESTION_PARAMETER_NAME"
      - DEFAULT_BACKEND_TYPE="$CHATBOT_UI_DEFAULT_BACKEND_TYPE"

  rasa_server:
    container_name: "rasa_server"
    restart: unless-stopped
    user: root
    build:
      context: Chatbot
      dockerfile: Dockerfile
    volumes:
      - "./Chatbot:/app"
    #network_mode: host
    ports:
      - "5005:5005"
    environment:
      - HOST_IP=$HOST_IP
      - RASA_ACTION_ENDPOINT_HOST=$HOST_IP
  action_server:
    container_name: "action_server"
    restart: unless-stopped
    build:
      context: Chatbot
      dockerfile: ./actions/Dockerfile
    volumes:
      - "./Chatbot/actions:/app/actions"
      - "./Chatbot/data:/app/data"
    #network_mode: host
    ports:
      - "5055:5055"
    environment:
      - QANARY_IP=$HOST_IP
      - SPARQL_IP=$HOST_IP

volumes:
  artifacts: {}
